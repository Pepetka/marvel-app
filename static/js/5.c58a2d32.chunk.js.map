{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","components/skeleton/SkeletonRandomChar.js","utils/setContent.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/charForm/CharForm.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","src","img","alt","style","display","width","height","objectFit","margin","useMarvelService","react","useState","process","setProcess","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","useHttp","_apiBase","_apiKey","getAllCharacters","offset","limit","res","results","map","_transformCharacter","getCharacterByName","name","getCharacter","id","getAllComics","_transformComics","getComic","char","description","str","thumbnail","path","extension","homepage","urls","wiki","comics","items","comic","title","pageCount","price","prices","Skeleton","props","className","speed","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","SkeletonRandomChar","setContent","isSkeletonWaiting","isSkeletonLoading","Component","Spinner","getDescription","desc","split","length","i","slice","View","imgStyle","indexOf","href","RandomChar","setChar","onUpdateChar","Math","floor","random","then","useEffect","CSSTransition","in","timeout","classNames","unmountOnExit","onClick","disabled","mjolnir","CharList","chars","setChars","end","setEnd","onUpdateChars","charsArr","concat","refsArr","useRef","onFocus","current","item","classList","remove","add","focus","charsList","ref","onSelectChar","onKeyDown","e","key","target","onBlur","tabIndex","ending","comicsArr","CharInfo","currentCharId","onCharLoaded","CharForm","contentVisability","setContentVisability","useForm","register","handleSubmit","errors","formState","setTimeout","errorMessage","to","onSubmit","charName","htmlFor","required","placeholder","type","message","ErrorBoundary","state","error","errorInf","console","log","this","setState","children","MainPage","setCurrentCharId","Helmet","content","selectId","decoration"],"mappings":"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","file":"static/js/5.c58a2d32.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      src={img}\r\n      alt=\"Error message\"\r\n      style={{\r\n        display: \"block\",\r\n        width: \"250px\",\r\n        height: \"250px\",\r\n        objectFit: \"contain\",\r\n        margin: \"0 auto\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\"\r\n\r\nconst useMarvelService = () => {\r\n\tconst { request, process, setProcess } = useHttp()\r\n\r\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\"\r\n\t// const _apiKey = \"apikey=335903c4bb34cf395d2d5406d87e2ea9\"\r\n\tconst _apiKey = \"apikey=05d5a6a8bae98d7e8fda1529ea14faa0\"\r\n\r\n\tconst getAllCharacters = async (offset = 300, limit = 9) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=${limit}&offset=${offset}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n\t\treturn _transformCharacter(res.data.results[0])\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = 300, limit = 8) => {\r\n\t\tconst res = await request(`${_apiBase}comics?limit=${limit}&offset=${offset}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformComics)\r\n\t}\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n\t\treturn _transformComics(res.data.results[0])\r\n\t}\r\n\r\n\tconst getDescription = (str) => {\r\n\t\treturn str || \"Description not found.\"\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: getDescription(char.description),\r\n\t\t\tthumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tid: char.id,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comic) => {\r\n\t\treturn {\r\n\t\t\tid: comic.id,\r\n\t\t\ttitle: comic.title,\r\n\t\t\tpageCount: comic.pageCount ? comic.pageCount + \" pages\" : \"No information.\",\r\n\t\t\tthumbnail: `${comic.thumbnail.path}.${comic.thumbnail.extension}`,\r\n\t\t\tprice: comic.prices[0].price ? `${comic.prices[0].price}$` : \"NOT AVAILABLE\",\r\n\t\t\tdescription: comic.description ? comic.description : \"Description not found.\",\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tprocess,\r\n\t\tsetProcess,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetCharacterByName,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t}\r\n}\r\n\r\nexport default useMarvelService\r\n","import react from \"react\"\r\n\r\nexport const useHttp = () => {\r\n\tconst [process, setProcess] = react.useState(\"waiting\")\r\n\r\n\tconst request = react.useCallback(\r\n\t\tasync (url, method = \"GET\", body = null, headers = { \"Content-Type\": \"application/json\" }) => {\r\n\t\t\tsetProcess(\"loading\")\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url, { method, body, headers })\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst data = await response.json()\r\n\t\t\t\treturn data\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetProcess(\"error\")\r\n\r\n\t\t\t\tthrow e\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t)\r\n\r\n\treturn { request, process, setProcess }\r\n}\r\n","import React from \"react\"\nimport ContentLoader from \"react-content-loader\"\n\nimport \"./skeleton.scss\"\n\nconst Skeleton = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<p className='char__select'>Please select a character to see information</p>\n\t\t\t<ContentLoader\n\t\t\t\tclassName='skeleton'\n\t\t\t\tspeed={2}\n\t\t\t\twidth={425}\n\t\t\t\theight={360}\n\t\t\t\tviewBox='0 0 425 360'\n\t\t\t\tbackgroundColor='#9f9f9f'\n\t\t\t\tforegroundColor='#ecebeb'\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<rect x='0' y='0' rx='0' ry='0' width='150' height='150' />\n\t\t\t\t<rect x='175' y='0' rx='0' ry='0' width='170' height='30' />\n\t\t\t\t<rect x='175' y='64' rx='0' ry='0' width='101' height='38' />\n\t\t\t\t<rect x='175' y='112' rx='0' ry='0' width='101' height='38' />\n\t\t\t\t<rect x='0' y='167' rx='0' ry='0' width='300' height='14' />\n\t\t\t\t<rect x='0' y='185' rx='0' ry='0' width='300' height='14' />\n\t\t\t\t<rect x='0' y='203' rx='0' ry='0' width='300' height='14' />\n\t\t\t\t<rect x='0' y='231' rx='0' ry='0' width='70' height='24' />\n\t\t\t\t<rect x='0' y='265' rx='0' ry='0' width='375' height='25' />\n\t\t\t</ContentLoader>\n\t\t</>\n\t)\n}\n\nexport default Skeleton\n","import React from \"react\"\r\nimport ContentLoader from \"react-content-loader\"\r\n\r\nconst SkeletonRandomChar = (props) => (\r\n\t<ContentLoader\r\n\t\tspeed={2}\r\n\t\twidth={480}\r\n\t\theight={180}\r\n\t\tviewBox='0 0 480 180'\r\n\t\tbackgroundColor='#9f9f9f'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='35' y='0' rx='0' ry='0' width='180' height='180' />\r\n\t\t<rect x='243' y='4' rx='0' ry='0' width='200' height='22' />\r\n\t\t<rect x='243' y='54' rx='0' ry='0' width='270' height='14' />\r\n\t\t<rect x='243' y='72' rx='0' ry='0' width='270' height='14' />\r\n\t\t<rect x='243' y='90' rx='0' ry='0' width='270' height='14' />\r\n\t\t<rect x='243' y='108' rx='0' ry='0' width='270' height='14' />\r\n\t\t<rect x='243' y='142' rx='0' ry='0' width='101' height='38' />\r\n\t\t<rect x='374' y='142' rx='0' ry='0' width='101' height='38' />\r\n\t</ContentLoader>\r\n)\r\n\r\nexport default SkeletonRandomChar\r\n","import Skeleton from \"../components/skeleton/Skeleton\"\r\nimport SkeletonRandomChar from \"../components/skeleton/SkeletonRandomChar\"\r\nimport Spinner from \"../components/spinner/Spinner\"\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\"\r\n\r\nconst setContent = (\r\n\tprocess,\r\n\tisSkeletonWaiting = false,\r\n\tisSkeletonLoading = false,\r\n\tComponent = null,\r\n\tdata = null\r\n) => {\r\n\tswitch (process) {\r\n\t\tcase \"waiting\":\r\n\t\t\treturn isSkeletonWaiting ? <Skeleton /> : <Spinner />\r\n\r\n\t\tcase \"loading\":\r\n\t\t\treturn isSkeletonLoading ? <SkeletonRandomChar /> : <Spinner />\r\n\r\n\t\tcase \"confirmed\":\r\n\t\t\treturn Component ? <Component data={data} /> : null\r\n\r\n\t\tcase \"error\":\r\n\t\t\treturn <ErrorMessage />\r\n\r\n\t\tdefault:\r\n\t\t\tbreak\r\n\t}\r\n}\r\n\r\nexport default setContent\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import react from \"react\"\nimport { CSSTransition } from \"react-transition-group\"\n\nimport \"./randomChar.scss\"\nimport mjolnir from \"../../resources/img/mjolnir.png\"\nimport useMarvelService from \"../../services/MarvelService\"\nimport setContent from \"../../utils/setContent\"\n\nconst RandomChar = () => {\n\tconst [char, setChar] = react.useState({})\n\tconst { process, setProcess, getCharacter } = useMarvelService()\n\n\treact.useEffect(() => {\n\t\tonUpdateChar()\n\t}, [])\n\n\tfunction onUpdateChar() {\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n\n\t\tgetCharacter(id).then((res) => {\n\t\t\tsetChar(res)\n\t\t\tsetProcess(\"confirmed\")\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className='randomchar'>\n\t\t\t{setContent(process, false, true)}\n\t\t\t{\n\t\t\t\t<CSSTransition\n\t\t\t\t\tin={process === \"confirmed\"}\n\t\t\t\t\ttimeout={2000}\n\t\t\t\t\tclassNames='randomchar__animate'\n\t\t\t\t\tunmountOnExit\n\t\t\t\t>\n\t\t\t\t\t<View data={char} />\n\t\t\t\t</CSSTransition>\n\t\t\t}\n\t\t\t<div className='randomchar__static'>\n\t\t\t\t<p className='randomchar__title'>\n\t\t\t\t\tRandom character for today!\n\t\t\t\t\t<br />\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className='randomchar__title'>Or choose another one</p>\n\t\t\t\t<button\n\t\t\t\t\tclassName='button button__main'\n\t\t\t\t\tonClick={onUpdateChar}\n\t\t\t\t\tdisabled={process === \"loading\"}\n\t\t\t\t>\n\t\t\t\t\t<div className='inner'>{process === \"loading\" ? \"loading...\" : \"try it\"}</div>\n\t\t\t\t</button>\n\t\t\t\t<img src={mjolnir} alt='mjolnir' className='randomchar__decoration' />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst getDescription = (str) => {\n\tlet desc = \"\"\n\n\tif (str.split(\" \").length > 20) {\n\t\tfor (let i = 0; i <= 20; i++) {\n\t\t\tdesc += `${str.split(\" \")[i]} `\n\t\t}\n\n\t\tdesc = desc.slice(0, -1) + \"...\"\n\t}\n\n\treturn desc || str\n}\n\nconst View = ({ data }) => {\n\tconst { name, description, thumbnail, homepage, wiki } = data,\n\t\timgStyle = thumbnail.indexOf(\"image_not_available\")\n\t\t\t? \"object-fit: contain\"\n\t\t\t: \"object-fit: cover\"\n\n\treturn (\n\t\t<div className='randomchar__block'>\n\t\t\t<img src={thumbnail} alt={name} className='randomchar__img' style={{ imgStyle }} />\n\t\t\t<div className='randomchar__info'>\n\t\t\t\t<p className='randomchar__name'>{name}</p>\n\t\t\t\t<p className='randomchar__descr'>{getDescription(description)}</p>\n\t\t\t\t<div className='randomchar__btns'>\n\t\t\t\t\t<a href={homepage} className='button button__main'>\n\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className='button button__secondary'>\n\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default RandomChar\n","import react from \"react\"\nimport PropTypes from \"prop-types\"\nimport { CSSTransition } from \"react-transition-group\"\n\nimport \"./charList.scss\"\nimport useMarvelService from \"../../services/MarvelService\"\nimport setContent from \"../../utils/setContent\"\n\nconst CharList = (props) => {\n\tconst [chars, setChars] = react.useState([])\n\tconst [end, setEnd] = react.useState(false)\n\n\tconst { process, setProcess, getAllCharacters } = useMarvelService()\n\n\treact.useEffect(onUpdateChars, [])\n\n\tfunction onCharsLoaded(charsArr) {\n\t\tsetChars((chars) => chars.concat(charsArr))\n\n\t\tif (charsArr.length < 9) {\n\t\t\tsetEnd(true)\n\t\t}\n\t}\n\n\tfunction onUpdateChars() {\n\t\tconst offset = 300 + chars.length\n\n\t\tgetAllCharacters(offset).then((res) => {\n\t\t\tonCharsLoaded(res)\n\t\t\tsetProcess(\"confirmed\")\n\t\t})\n\t}\n\n\tconst refsArr = react.useRef([])\n\n\tfunction onFocus(id) {\n\t\trefsArr.current.map((item) => item.classList.remove(\"char__item_selected\"))\n\t\trefsArr.current[id].classList.add(\"char__item_selected\")\n\t\trefsArr.current[id].focus()\n\t}\n\n\tconst charsList = chars.map((char, i) => {\n\t\tconst { name, thumbnail } = char,\n\t\t\timgStyle = thumbnail.indexOf(\"image_not_available\")\n\t\t\t\t? \"object-fit: contain\"\n\t\t\t\t: \"object-fit: cover\"\n\n\t\tlet liClass = \"char__item\"\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\tref={(ref) => (refsArr.current[i] = ref)}\n\t\t\t\tclassName={liClass}\n\t\t\t\tkey={char.id}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.onSelectChar(char.id)\n\t\t\t\t\tonFocus(i)\n\t\t\t\t}}\n\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\tif (e.key === \"Enter\" || e.key === \" \") {\n\t\t\t\t\t\tprops.onSelectChar(char.id)\n\t\t\t\t\t\tonFocus(i)\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonFocus={(e) => e.target.classList.add(\"char__item_focus\")}\n\t\t\t\tonBlur={(e) => e.target.classList.remove(\"char__item_focus\")}\n\t\t\t\ttabIndex='0'\n\t\t\t>\n\t\t\t\t<img src={thumbnail} alt={name} style={{ imgStyle }} />\n\t\t\t\t<div className='char__name'>{name}</div>\n\t\t\t</li>\n\t\t)\n\t})\n\n\tconst ending = end ? null : (\n\t\t<button\n\t\t\tclassName='button button__main button__long'\n\t\t\tonKeyDown={(e) => {\n\t\t\t\tif (e.key === \"Enter\" || e.key === \" \") {\n\t\t\t\t\tonUpdateChars()\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonClick={onUpdateChars}\n\t\t\tdisabled={process === \"loading\"}\n\t\t>\n\t\t\t<div className='inner'>{process === \"loading\" ? \"loading...\" : \"load more\"}</div>\n\t\t</button>\n\t)\n\n\treturn (\n\t\t<div className='char__list'>\n\t\t\t<CSSTransition in={process === \"confirmed\"} timeout={1000} classNames='char__animate'>\n\t\t\t\t<ul className='char__grid'>{charsList}</ul>\n\t\t\t</CSSTransition>\n\t\t\t{setContent(process)}\n\t\t\t{ending}\n\t\t</div>\n\t)\n}\n\nCharList.propTypes = {\n\tonSelectChar: PropTypes.func,\n}\n\nexport default CharList\n","import react from \"react\"\nimport { CSSTransition } from \"react-transition-group\"\n\nimport \"./charInfo.scss\"\nimport useMarvelService from \"../../services/MarvelService\"\nimport setContent from \"../../utils/setContent\"\n\nconst CharInfo = (props) => {\n\tconst [char, setChar] = react.useState(null)\n\tconst { process, setProcess, getCharacter } = useMarvelService()\n\n\treact.useEffect(onUpdateChars, [props])\n\n\tfunction onUpdateChars() {\n\t\tif (!props.currentCharId) {\n\t\t\treturn\n\t\t}\n\n\t\tgetCharacter(props.currentCharId).then((res) => {\n\t\t\tonCharLoaded(res)\n\t\t\tsetProcess(\"confirmed\")\n\t\t})\n\t}\n\n\tfunction onCharLoaded(char) {\n\t\tsetChar(char)\n\t}\n\n\treturn (\n\t\t<div className='char__info'>\n\t\t\t{setContent(process, true)}\n\t\t\t<CSSTransition\n\t\t\t\tin={process === \"confirmed\"}\n\t\t\t\ttimeout={2000}\n\t\t\t\tclassNames='char__info-animate'\n\t\t\t\tunmountOnExit\n\t\t\t>\n\t\t\t\t<View data={char} />\n\t\t\t</CSSTransition>\n\t\t</div>\n\t)\n}\n\nconst View = ({ data }) => {\n\tconst { name, description, thumbnail, homepage, wiki, comics } = data,\n\t\tcomicsArr = comics.length ? (\n\t\t\tcomics.slice(0, 10).map((item, i) => (\n\t\t\t\t<li className='char__comics-item' key={i}>\n\t\t\t\t\t{item.name}\n\t\t\t\t</li>\n\t\t\t))\n\t\t) : (\n\t\t\t<li className='char__comics-item'>Comics not found.</li>\n\t\t)\n\n\tconst imgStyle = thumbnail.indexOf(\"image_not_available\")\n\t\t? \"object-fit: contain\"\n\t\t: \"object-fit: cover\"\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='char__basics'>\n\t\t\t\t<img src={thumbnail} alt={name} style={{ imgStyle }} />\n\t\t\t\t<div>\n\t\t\t\t\t<div className='char__info-name'>{name}</div>\n\t\t\t\t\t<div className='char__btns'>\n\t\t\t\t\t\t<a href={homepage} className='button button__main'>\n\t\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href={wiki} className='button button__secondary'>\n\t\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='char__descr'>{description}</div>\n\t\t\t<div className='char__comics'>Comics:</div>\n\t\t\t<ul className='char__comics-list'>{comicsArr}</ul>\n\t\t</div>\n\t)\n}\n\nexport default CharInfo\n","import { useState, useEffect } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\n// import { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from \"formik\"\r\n// import * as Yup from \"yup\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport useMarvelService from \"../../services/MarvelService\"\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\"\r\n\r\nimport \"./charForm.scss\"\r\n\r\nconst CharForm = () => {\r\n\tconst [char, setChar] = useState(null)\r\n\tconst [contentVisability, setContentVisability] = useState(true)\r\n\tconst { process, setProcess, getCharacterByName } = useMarvelService()\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { errors },\r\n\t} = useForm()\r\n\r\n\tuseEffect(() => {\r\n\t\tsetContentVisability(true)\r\n\t\tif (char && char.length === 0) {\r\n\t\t\tsetTimeout(() => setContentVisability(false), 3000)\r\n\t\t}\r\n\t}, [char])\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char)\r\n\t}\r\n\r\n\tconst updateChar = (data) => {\r\n\t\tgetCharacterByName(data.charName).then((res) => {\r\n\t\t\tonCharLoaded(res)\r\n\t\t\tsetProcess(\"confirmed\")\r\n\t\t})\r\n\t}\r\n\r\n\tconst errorMessage =\r\n\t\tprocess === \"error\" ? (\r\n\t\t\t<div className='char__search-critical-error'>\r\n\t\t\t\t<ErrorMessage />\r\n\t\t\t</div>\r\n\t\t) : null\r\n\tconst results = !char ? null : char.length > 0 ? (\r\n\t\t<div className='char__search-wrapper'>\r\n\t\t\t<div className='char__search-success'>There is! Visit {char[0].name} page?</div>\r\n\t\t\t<NavLink to={`/characters/${char[0].id}`} className='button button__secondary'>\r\n\t\t\t\t<div className='inner'>To page</div>\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<div className='char__search-error'>\r\n\t\t\tThe character was not found. Check the name and try again\r\n\t\t</div>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div className='char__search-form'>\r\n\t\t\t{/* <Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tcharName: \"\",\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object({\r\n\t\t\t\t\tcharName: Yup.string().required(\"This field is required\"),\r\n\t\t\t\t})}\r\n\t\t\t\tonSubmit={(data) => {\r\n\t\t\t\t\tupdateChar(data)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<label className='char__search-label' htmlFor='charName'>\r\n\t\t\t\t\t\tOr find a character by name:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<div className='char__search-wrapper'>\r\n\t\t\t\t\t\t<Field id='charName' name='charName' type='text' placeholder='Enter name' />\r\n\t\t\t\t\t\t<button type='submit' className='button button__main' disabled={process === \"loading\"}>\r\n\t\t\t\t\t\t\t<div className='inner'>{process === \"loading\" ? \"loading...\" : \"find\"}</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<FormikErrorMessage component='div' className='char__search-error' name='charName' />\r\n\t\t\t\t</Form>\r\n\t\t\t</Formik> */}\r\n\r\n\t\t\t<form onSubmit={handleSubmit(updateChar)}>\r\n\t\t\t\t<label className='char__search-label' htmlFor='charName'>\r\n\t\t\t\t\tOr find a character by name:\r\n\t\t\t\t</label>\r\n\t\t\t\t<div className='char__search-wrapper'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\t{...register(\"charName\", { required: \"This field is required\" })}\r\n\t\t\t\t\t\tplaceholder='Enter name'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type='submit' className='button button__main' disabled={process === \"loading\"}>\r\n\t\t\t\t\t\t<div className='inner'>{process === \"loading\" ? \"loading...\" : \"find\"}</div>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{errors.charName && (\r\n\t\t\t\t\t<div className='char__search-error' name='charName'>\r\n\t\t\t\t\t\t{errors.charName.message}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</form>\r\n\r\n\t\t\t{contentVisability ? results : null}\r\n\t\t\t{errorMessage}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CharForm\r\n","import react from \"react\"\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\"\r\n\r\nclass ErrorBoundary extends react.Component {\r\n\tstate = {\r\n\t\terror: false,\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInf) {\r\n\t\tconsole.log(errorInf)\r\n\r\n\t\tthis.setState({\r\n\t\t\terror: true,\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage />\r\n\t\t}\r\n\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import react from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\"\r\nimport CharList from \"../charList/CharList\"\r\nimport CharInfo from \"../charInfo/CharInfo\"\r\nimport CharForm from \"../charForm/CharForm\"\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\"\r\n\r\nimport decoration from \"../../resources/img/vision.png\"\r\n\r\nconst MainPage = () => {\r\n\tconst [currentCharId, setCurrentCharId] = react.useState(null)\r\n\r\n\tfunction onSelectChar(selectId) {\r\n\t\tsetCurrentCharId(selectId)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta name='description' content='Marvel information portal' />\r\n\t\t\t\t<title>Marvel information portal</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar />\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className='char__content'>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onSelectChar={onSelectChar} currentCharId={currentCharId} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharInfo currentCharId={currentCharId} />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharForm />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<img className='bg-decoration' src={decoration} alt='vision' />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MainPage\r\n"],"sourceRoot":""}