{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","components/skeleton/SkeletonRandomChar.js","utils/setContent.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/singleComic/SingleComic.js","components/pages/SingleComicPage.js"],"names":["ErrorMessage","src","img","alt","style","display","width","height","objectFit","margin","useMarvelService","react","useState","process","setProcess","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","useHttp","_apiBase","_apiKey","getAllCharacters","offset","limit","res","results","map","_transformCharacter","getCharacterByName","name","getCharacter","id","getAllComics","_transformComics","getComic","char","description","str","thumbnail","path","extension","homepage","urls","wiki","comics","items","comic","title","pageCount","price","prices","Skeleton","props","className","speed","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","SkeletonRandomChar","setContent","isSkeletonWaiting","isSkeletonLoading","Component","Spinner","AppBanner","avengers","avengersLogo","View","to","SingleComic","setComic","comicId","useParams","useEffect","then","SingleComicPage","Helmet","content"],"mappings":"iGAAe,UAA0B,kC,OCkB1BA,IAhBM,WACnB,OACE,qBACEC,IAAKC,EACLC,IAAI,gBACJC,MAAO,CACLC,QAAS,QACTC,MAAO,QACPC,OAAQ,QACRC,UAAW,UACXC,OAAQ,c,oFC4DDC,IAtEU,WACxB,MCDsB,WACtB,MAA8BC,IAAMC,SAAS,WAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KAwBA,MAAO,CAAEC,QAtBOJ,IAAMK,YAAN,uCACf,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,CAAE,eAAgB,oBACpEP,EAAW,WADZ,kBAIyBQ,MAAML,EAAK,CAAEE,SAAQC,OAAMC,YAJpD,WAIQE,EAJR,QAMgBC,GANhB,uBAOS,IAAIC,MAAJ,0BAA6BR,EAA7B,qBAA6CM,EAASG,SAP/D,yBAUqBH,EAASI,OAV9B,eAUQC,EAVR,yBAWSA,GAXT,wCAaEd,EAAW,SAbb,+DADe,sDAmBf,IAGiBD,UAASC,cDxBce,GAAjCd,EAAR,EAAQA,QAASF,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,WAEpBgB,EAAW,4CAEXC,EAAU,0CAEVC,EAAgB,uCAAG,4CAAAd,EAAA,6DAAOe,EAAP,+BAAgB,IAAKC,EAArB,+BAA6B,EAA7B,SACNnB,EAAQ,GAAD,OAAIe,EAAJ,4BAAgCI,EAAhC,mBAAgDD,EAAhD,YAA0DF,IAD3D,cAClBI,EADkB,yBAEjBA,EAAIP,KAAKQ,QAAQC,IAAIC,IAFJ,2CAAH,qDAKhBC,EAAkB,uCAAG,WAAOC,GAAP,eAAAtB,EAAA,sEACRH,EAAQ,GAAD,OAAIe,EAAJ,2BAA+BU,EAA/B,YAAuCT,IADtC,cACpBI,EADoB,yBAEnBA,EAAIP,KAAKQ,QAAQC,IAAIC,IAFF,2CAAH,sDAKlBG,EAAY,uCAAG,WAAOC,GAAP,eAAAxB,EAAA,sEACFH,EAAQ,GAAD,OAAIe,EAAJ,sBAA0BY,EAA1B,YAAgCX,IADrC,cACdI,EADc,yBAEbG,EAAoBH,EAAIP,KAAKQ,QAAQ,KAFxB,2CAAH,sDAKZO,EAAY,uCAAG,4CAAAzB,EAAA,6DAAOe,EAAP,+BAAgB,IAAKC,EAArB,+BAA6B,EAA7B,SACFnB,EAAQ,GAAD,OAAIe,EAAJ,wBAA4BI,EAA5B,mBAA4CD,EAA5C,YAAsDF,IAD3D,cACdI,EADc,yBAEbA,EAAIP,KAAKQ,QAAQC,IAAIO,IAFR,2CAAH,qDAKZC,EAAQ,uCAAG,WAAOH,GAAP,eAAAxB,EAAA,sEACEH,EAAQ,GAAD,OAAIe,EAAJ,kBAAsBY,EAAtB,YAA4BX,IADrC,cACVI,EADU,yBAETS,EAAiBT,EAAIP,KAAKQ,QAAQ,KAFzB,2CAAH,sDASRE,EAAsB,SAACQ,GAC5B,MAAO,CACNN,KAAMM,EAAKN,KACXO,aAPsBC,EAOMF,EAAKC,YAN3BC,GAAO,0BAObC,UAAU,GAAD,OAAKH,EAAKG,UAAUC,KAApB,YAA4BJ,EAAKG,UAAUE,WACpDC,SAAUN,EAAKO,KAAK,GAAGpC,IACvBqC,KAAMR,EAAKO,KAAK,GAAGpC,IACnByB,GAAII,EAAKJ,GACTa,OAAQT,EAAKS,OAAOC,OAZC,IAACR,GAgBlBJ,EAAmB,SAACa,GACzB,MAAO,CACNf,GAAIe,EAAMf,GACVgB,MAAOD,EAAMC,MACbC,UAAWF,EAAME,UAAYF,EAAME,UAAY,SAAW,kBAC1DV,UAAU,GAAD,OAAKQ,EAAMR,UAAUC,KAArB,YAA6BO,EAAMR,UAAUE,WACtDS,MAAOH,EAAMI,OAAO,GAAGD,MAAhB,UAA2BH,EAAMI,OAAO,GAAGD,MAA3C,KAAsD,gBAC7Db,YAAaU,EAAMV,YAAcU,EAAMV,YAAc,2BAIvD,MAAO,CACNlC,UACAC,aACAkB,mBACAS,eACAF,qBACAI,eACAE,c,0EEnCaiB,EA5BE,SAACC,GACjB,OACC,qCACC,mBAAGC,UAAU,eAAb,0DACA,eAAC,IAAD,yBACCA,UAAU,WACVC,MAAO,EACP3D,MAAO,IACPC,OAAQ,IACR2D,QAAQ,cACRC,gBAAgB,UAChBC,gBAAgB,WACZL,GARL,cAUC,sBAAMM,EAAE,IAAIC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,QACnD,sBAAM8D,EAAE,MAAMC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,OACrD,sBAAM8D,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,OACtD,sBAAM8D,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,OACvD,sBAAM8D,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,OACrD,sBAAM8D,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,OACrD,sBAAM8D,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,OACrD,sBAAM8D,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,KAAKC,OAAO,OACpD,sBAAM8D,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,eCH1CkE,EArBY,SAACV,GAAD,OAC1B,eAAC,IAAD,yBACCE,MAAO,EACP3D,MAAO,IACPC,OAAQ,IACR2D,QAAQ,cACRC,gBAAgB,UAChBC,gBAAgB,WACZL,GAPL,cASC,sBAAMM,EAAE,KAAKC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,QACpD,sBAAM8D,EAAE,MAAMC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,OACrD,sBAAM8D,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,OACtD,sBAAM8D,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,OACtD,sBAAM8D,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,OACtD,sBAAM8D,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,OACvD,sBAAM8D,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,OACvD,sBAAM8D,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIlE,MAAM,MAAMC,OAAO,Y,gBCU1CmE,IAzBI,SAClB7D,GAKK,IAJL8D,EAII,wDAHJC,EAGI,wDAFJC,EAEI,uDAFQ,KACZjD,EACI,uDADG,KAEP,OAAQf,GACP,IAAK,UACJ,OAAO8D,EAAoB,cAAC,EAAD,IAAe,cAACG,EAAA,EAAD,IAE3C,IAAK,UACJ,OAAOF,EAAoB,cAAC,EAAD,IAAyB,cAACE,EAAA,EAAD,IAErD,IAAK,YACJ,OAAOD,EAAY,cAACA,EAAD,CAAWjD,KAAMA,IAAW,KAEhD,IAAK,QACJ,OAAO,cAAC5B,EAAA,EAAD,O,oFCvBK,MAA0B,qCCA1B,MAA0B,0C,OCkB1B+E,IAdG,WACjB,OACC,sBAAKf,UAAU,cAAf,UACC,qBAAK/D,IAAK+E,EAAU7E,IAAI,aACxB,sBAAK6D,UAAU,mBAAf,mCAEC,uBAFD,iBAKA,qBAAK/D,IAAKgF,EAAc9E,IAAI,uB,4ICezB+E,EAAO,SAAC,GAAc,IAAZtD,EAAW,EAAXA,KACP8B,EAAoD9B,EAApD8B,MAAOX,EAA6CnB,EAA7CmB,YAAaE,EAAgCrB,EAAhCqB,UAAWW,EAAqBhC,EAArBgC,MAAOD,EAAc/B,EAAd+B,UAE9C,OACC,qCACC,qBAAK1D,IAAKgD,EAAW9C,IAAKuD,EAAOM,UAAU,sBAC3C,sBAAKA,UAAU,qBAAf,UACC,oBAAIA,UAAU,qBAAd,SAAoCN,IACpC,mBAAGM,UAAU,sBAAb,SAAoCjB,IACpC,mBAAGiB,UAAU,sBAAb,SAAoCL,IACpC,mBAAGK,UAAU,sBAAb,6BACA,qBAAKA,UAAU,sBAAf,SAAsCJ,OAEvC,cAAC,IAAD,CAASuB,GAAG,UAAUnB,UAAU,qBAAhC,6BAOYoB,EAzCK,SAACrB,GACpB,MAA0BpD,IAAMC,SAAS,MAAzC,mBAAO6C,EAAP,KAAc4B,EAAd,KACA,EAA0C3E,cAAlCG,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAAY+B,EAA7B,EAA6BA,SACrByC,EAAYC,cAAZD,QAeR,OAbA3E,IAAM6E,WAEN,WACC,IAAKF,EACJ,OAGDzC,EAASyC,GAASG,MAAK,SAACtD,GACvBkD,EAASlD,GACTrB,EAAW,kBATkB,CAACiD,IAazB,qBAAKC,UAAU,eAAf,SAA+BU,YAAW7D,GAAS,GAAO,EAAOqE,EAAMzB,M,QCPhEiC,UAbS,WACvB,OACC,gCACC,eAACC,EAAA,EAAD,WACC,sBAAMnD,KAAK,cAAcoD,QAAQ,sBACjC,yDAED,cAACb,EAAA,EAAD,IACA,cAAC,EAAD","file":"static/js/8.62d28e50.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      src={img}\r\n      alt=\"Error message\"\r\n      style={{\r\n        display: \"block\",\r\n        width: \"250px\",\r\n        height: \"250px\",\r\n        objectFit: \"contain\",\r\n        margin: \"0 auto\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\"\r\n\r\nconst useMarvelService = () => {\r\n\tconst { request, process, setProcess } = useHttp()\r\n\r\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\"\r\n\t// const _apiKey = \"apikey=335903c4bb34cf395d2d5406d87e2ea9\"\r\n\tconst _apiKey = \"apikey=05d5a6a8bae98d7e8fda1529ea14faa0\"\r\n\r\n\tconst getAllCharacters = async (offset = 300, limit = 9) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=${limit}&offset=${offset}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n\t\treturn _transformCharacter(res.data.results[0])\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = 300, limit = 8) => {\r\n\t\tconst res = await request(`${_apiBase}comics?limit=${limit}&offset=${offset}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformComics)\r\n\t}\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n\t\treturn _transformComics(res.data.results[0])\r\n\t}\r\n\r\n\tconst getDescription = (str) => {\r\n\t\treturn str || \"Description not found.\"\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: getDescription(char.description),\r\n\t\t\tthumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tid: char.id,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comic) => {\r\n\t\treturn {\r\n\t\t\tid: comic.id,\r\n\t\t\ttitle: comic.title,\r\n\t\t\tpageCount: comic.pageCount ? comic.pageCount + \" pages\" : \"No information.\",\r\n\t\t\tthumbnail: `${comic.thumbnail.path}.${comic.thumbnail.extension}`,\r\n\t\t\tprice: comic.prices[0].price ? `${comic.prices[0].price}$` : \"NOT AVAILABLE\",\r\n\t\t\tdescription: comic.description ? comic.description : \"Description not found.\",\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tprocess,\r\n\t\tsetProcess,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetCharacterByName,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t}\r\n}\r\n\r\nexport default useMarvelService\r\n","import react from \"react\"\r\n\r\nexport const useHttp = () => {\r\n\tconst [process, setProcess] = react.useState(\"waiting\")\r\n\r\n\tconst request = react.useCallback(\r\n\t\tasync (url, method = \"GET\", body = null, headers = { \"Content-Type\": \"application/json\" }) => {\r\n\t\t\tsetProcess(\"loading\")\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url, { method, body, headers })\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst data = await response.json()\r\n\t\t\t\treturn data\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetProcess(\"error\")\r\n\r\n\t\t\t\tthrow e\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t)\r\n\r\n\treturn { request, process, setProcess }\r\n}\r\n","import React from \"react\"\nimport ContentLoader from \"react-content-loader\"\n\nimport \"./skeleton.scss\"\n\nconst Skeleton = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<p className='char__select'>Please select a character to see information</p>\n\t\t\t<ContentLoader\n\t\t\t\tclassName='skeleton'\n\t\t\t\tspeed={2}\n\t\t\t\twidth={425}\n\t\t\t\theight={360}\n\t\t\t\tviewBox='0 0 425 360'\n\t\t\t\tbackgroundColor='#9f9f9f'\n\t\t\t\tforegroundColor='#ecebeb'\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<rect x='0' y='0' rx='0' ry='0' width='150' height='150' />\n\t\t\t\t<rect x='175' y='0' rx='0' ry='0' width='170' height='30' />\n\t\t\t\t<rect x='175' y='64' rx='0' ry='0' width='101' height='38' />\n\t\t\t\t<rect x='175' y='112' rx='0' ry='0' width='101' height='38' />\n\t\t\t\t<rect x='0' y='167' rx='0' ry='0' width='300' height='14' />\n\t\t\t\t<rect x='0' y='185' rx='0' ry='0' width='300' height='14' />\n\t\t\t\t<rect x='0' y='203' rx='0' ry='0' width='300' height='14' />\n\t\t\t\t<rect x='0' y='231' rx='0' ry='0' width='70' height='24' />\n\t\t\t\t<rect x='0' y='265' rx='0' ry='0' width='375' height='25' />\n\t\t\t</ContentLoader>\n\t\t</>\n\t)\n}\n\nexport default Skeleton\n","import React from \"react\"\r\nimport ContentLoader from \"react-content-loader\"\r\n\r\nconst SkeletonRandomChar = (props) => (\r\n\t<ContentLoader\r\n\t\tspeed={2}\r\n\t\twidth={480}\r\n\t\theight={180}\r\n\t\tviewBox='0 0 480 180'\r\n\t\tbackgroundColor='#9f9f9f'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='35' y='0' rx='0' ry='0' width='180' height='180' />\r\n\t\t<rect x='243' y='4' rx='0' ry='0' width='200' height='22' />\r\n\t\t<rect x='243' y='54' rx='0' ry='0' width='270' height='14' />\r\n\t\t<rect x='243' y='72' rx='0' ry='0' width='270' height='14' />\r\n\t\t<rect x='243' y='90' rx='0' ry='0' width='270' height='14' />\r\n\t\t<rect x='243' y='108' rx='0' ry='0' width='270' height='14' />\r\n\t\t<rect x='243' y='142' rx='0' ry='0' width='101' height='38' />\r\n\t\t<rect x='374' y='142' rx='0' ry='0' width='101' height='38' />\r\n\t</ContentLoader>\r\n)\r\n\r\nexport default SkeletonRandomChar\r\n","import Skeleton from \"../components/skeleton/Skeleton\"\r\nimport SkeletonRandomChar from \"../components/skeleton/SkeletonRandomChar\"\r\nimport Spinner from \"../components/spinner/Spinner\"\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\"\r\n\r\nconst setContent = (\r\n\tprocess,\r\n\tisSkeletonWaiting = false,\r\n\tisSkeletonLoading = false,\r\n\tComponent = null,\r\n\tdata = null\r\n) => {\r\n\tswitch (process) {\r\n\t\tcase \"waiting\":\r\n\t\t\treturn isSkeletonWaiting ? <Skeleton /> : <Spinner />\r\n\r\n\t\tcase \"loading\":\r\n\t\t\treturn isSkeletonLoading ? <SkeletonRandomChar /> : <Spinner />\r\n\r\n\t\tcase \"confirmed\":\r\n\t\t\treturn Component ? <Component data={data} /> : null\r\n\r\n\t\tcase \"error\":\r\n\t\t\treturn <ErrorMessage />\r\n\r\n\t\tdefault:\r\n\t\t\tbreak\r\n\t}\r\n}\r\n\r\nexport default setContent\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import \"./appBanner.scss\"\nimport avengers from \"../../resources/img/Avengers.png\"\nimport avengersLogo from \"../../resources/img/Avengers_logo.png\"\n\nconst AppBanner = () => {\n\treturn (\n\t\t<div className='app__banner'>\n\t\t\t<img src={avengers} alt='Avengers' />\n\t\t\t<div className='app__banner-text'>\n\t\t\t\tNew comics every week!\n\t\t\t\t<br />\n\t\t\t\tStay tuned!\n\t\t\t</div>\n\t\t\t<img src={avengersLogo} alt='Avengers logo' />\n\t\t</div>\n\t)\n}\n\nexport default AppBanner\n","import react from \"react\"\nimport { NavLink, useParams } from \"react-router-dom\"\n\nimport \"./singleComic.scss\"\nimport useMarvelService from \"../../services/MarvelService\"\nimport setContent from \"../../utils/setContent\"\n\nconst SingleComic = (props) => {\n\tconst [comic, setComic] = react.useState(null)\n\tconst { process, setProcess, getComic } = useMarvelService()\n\tconst { comicId } = useParams()\n\n\treact.useEffect(onUpdateComic, [props])\n\n\tfunction onUpdateComic() {\n\t\tif (!comicId) {\n\t\t\treturn\n\t\t}\n\n\t\tgetComic(comicId).then((res) => {\n\t\t\tsetComic(res)\n\t\t\tsetProcess(\"confirmed\")\n\t\t})\n\t}\n\n\treturn <div className='single-comic'>{setContent(process, false, false, View, comic)}</div>\n}\n\nconst View = ({ data }) => {\n\tconst { title, description, thumbnail, price, pageCount } = data\n\n\treturn (\n\t\t<>\n\t\t\t<img src={thumbnail} alt={title} className='single-comic__img' />\n\t\t\t<div className='single-comic__info'>\n\t\t\t\t<h2 className='single-comic__name'>{title}</h2>\n\t\t\t\t<p className='single-comic__descr'>{description}</p>\n\t\t\t\t<p className='single-comic__descr'>{pageCount}</p>\n\t\t\t\t<p className='single-comic__descr'>Language: en-us</p>\n\t\t\t\t<div className='single-comic__price'>{price}</div>\n\t\t\t</div>\n\t\t\t<NavLink to='/comics' className='single-comic__back'>\n\t\t\t\tBack to all\n\t\t\t</NavLink>\n\t\t</>\n\t)\n}\n\nexport default SingleComic\n","import { Helmet } from \"react-helmet\"\r\n\r\nimport SingleComic from \"../singleComic/SingleComic\"\r\nimport AppBanner from \"../appBanner/AppBanner\"\r\n\r\nconst SingleComicPage = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta name='description' content='Single comic page' />\r\n\t\t\t\t<title>Single comic page</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<AppBanner />\r\n\t\t\t<SingleComic />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SingleComicPage\r\n"],"sourceRoot":""}